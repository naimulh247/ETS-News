{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naimulh/Desktop/npm projects/capitalOne/ETS-News/client/src/Components/Technology/Technology.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, API_TP_ENT, API_TP_SPORT, API_TP_TECH } from '../../config';\nimport LoadMoreBtn from '../../Elements/LoadMoreBtn/LoadMoreBtn';\nimport SearchBar from '../../Elements/SearchBar/SeachBar';\nimport TechnologyGrid from '../../Elements/TechnologyGrid/TechnologyGrid'; // import LoadMoreBtn  from '../../Elements/LoadMoreBtn/LoadMoreBtn'\n\nclass Technology extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      techArticles: [],\n      currentResult: 0,\n      loading: false,\n      totalResult: 0,\n      page: 1,\n      searchTerm: ''\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = ''; // if(searchTerm === ''){\n      // {this.state.currentResult + 20}\n\n      endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}&page=${this.state.page}`;\n      console.log(\"page count: \", this.state.page, \"currentResult: \", this.state.currentResult); // }\n\n      this.fetchTech(endpoint);\n    };\n\n    this.fetchTech = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        // console.log(result.articles);\n        // console.log(result.totalResults);\n        // console.log(result.articles[0].author);\n        let pageCount = this.state.page + 1;\n        let resultCount = this.state.currentResult + 20;\n        this.setState({\n          techArticles: [...this.state.techArticles, ...result.articles],\n          totalResult: result.totalResults,\n          currentResult: resultCount,\n          page: pageCount,\n          loading: false\n        }); // console.log(this.state.articles[0].author)\n      }).catch(error => console.log('Error: ', error));\n    };\n\n    this.searchItem = searchTerm => {\n      console.log(\"SearchTerm: \", searchTerm);\n      let endpoint = '';\n      this.setState({\n        techArticles: [],\n        loading: true,\n        page: 1,\n        totalResult: 0,\n        currentResult: 0,\n        searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}`;\n      } else {\n        endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}&q=${searchTerm}`;\n      }\n\n      this.fetchTech(endpoint);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}`;\n    this.fetchTech(endpoint);\n  }\n\n  render() {\n    // console.log(this.state.techArticles[0].title)\n    return (\n      /*#__PURE__*/\n      // <h1>{this.state.techArticles.title}</h1>\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          callback: this.searchItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-deck\",\n          children: [this.state.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 39\n          }, this) : null, this.state.techArticles.map((elements, i) => {\n            return /*#__PURE__*/_jsxDEV(TechnologyGrid, {\n              title: elements.title,\n              author: elements.author ? elements.author : \"Unknown Author\",\n              description: elements.description ? elements.description : \"Unkown Description\",\n              date: elements.publishedAt,\n              url: elements.url,\n              image: elements.urlToImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 28\n            }, this);\n          }), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    );\n  }\n\n}\n\nexport default Technology;","map":{"version":3,"sources":["/Users/naimulh/Desktop/npm projects/capitalOne/ETS-News/client/src/Components/Technology/Technology.js"],"names":["React","Component","API_URL","API_KEY","API_TP_ENT","API_TP_SPORT","API_TP_TECH","LoadMoreBtn","SearchBar","TechnologyGrid","Technology","state","techArticles","currentResult","loading","totalResult","page","searchTerm","loadMoreItems","endpoint","console","log","fetchTech","fetch","then","result","json","pageCount","resultCount","setState","articles","totalResults","catch","error","searchItem","componentDidMount","render","map","elements","i","title","author","description","publishedAt","url","urlToImage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {API_URL, API_KEY, API_TP_ENT, API_TP_SPORT, API_TP_TECH} from '../../config';\nimport LoadMoreBtn from '../../Elements/LoadMoreBtn/LoadMoreBtn';\nimport SearchBar from '../../Elements/SearchBar/SeachBar'\nimport TechnologyGrid from '../../Elements/TechnologyGrid/TechnologyGrid'\n// import LoadMoreBtn  from '../../Elements/LoadMoreBtn/LoadMoreBtn'\n\n\nclass Technology extends Component{\n\n    state = {\n        techArticles:[],\n        currentResult:0,\n        loading: false,\n        totalResult: 0,\n        page: 1,\n        searchTerm: ''\n\n    }\n\n    componentDidMount(){\n        this.setState({loading: true});\n\n        const endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}`;\n        this.fetchTech(endpoint)\n\n    }\n\n    loadMoreItems = () =>{\n        let endpoint =''\n\n        // if(searchTerm === ''){\n            // {this.state.currentResult + 20}\n            endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}&page=${this.state.page}`;\n            console.log(\"page count: \", this.state.page, \"currentResult: \", this.state.currentResult)\n        // }\n\n        this.fetchTech(endpoint)\n    }\n    fetchTech = (endpoint) =>{\n        fetch(endpoint)\n        .then(result=>result.json())\n        .then(result =>{\n    \n            // console.log(result.articles);\n            // console.log(result.totalResults);\n            // console.log(result.articles[0].author);\n            let pageCount = this.state.page + 1;\n            let resultCount  = this.state.currentResult +20;\n            this.setState({\n                techArticles: [...this.state.techArticles, ...result.articles],\n                totalResult: result.totalResults,\n                currentResult: resultCount,\n                page: pageCount,\n                loading: false\n            });\n            \n            // console.log(this.state.articles[0].author)\n        })\n        .catch(error=>console.log('Error: ', error));\n    }\n\n    searchItem = (searchTerm) =>{\n        console.log(\"SearchTerm: \",searchTerm)\n        let endpoint = ''\n\n        this.setState({\n            techArticles:[],\n            loading: true,\n            page:1,\n            totalResult: 0,\n            currentResult:0,\n            searchTerm\n        })\n        if(searchTerm ===''){\n            endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}`;\n        }\n        else{\n            endpoint = `${API_URL}${API_TP_TECH}&apiKey=${API_KEY}&q=${searchTerm}`;\n        }\n        this.fetchTech(endpoint)\n    }\n\n\n\n\n    render(){\n        // console.log(this.state.techArticles[0].title)\n\n        return(\n        // <h1>{this.state.techArticles.title}</h1>\n        <>\n            <SearchBar callback={this.searchItem}/>\n\n            <div className=\"card-deck\">\n                {this.state.loading ? <h1>Loading...</h1> : null}\n                {this.state.techArticles.map((elements, i)=>{\n                    return <TechnologyGrid \n                    title={elements.title} author={elements.author? elements.author : \"Unknown Author\"} description={elements.description ? elements.description : \"Unkown Description\"}\n                     date={elements.publishedAt} url={elements.url} image={elements.urlToImage}\n                    />\n                })};\n                {/* {(this.state.currentResult <= this.state.totalResult && !this.state.loading) ?\n                    <LoadMoreBtn text= \"Load More\" onClick = {this.loadMoreItems}/> \n                    : null\n                } */}\n            </div>\n            </>\n        )\n    }\n}\n\nexport default Technology"]},"metadata":{},"sourceType":"module"}